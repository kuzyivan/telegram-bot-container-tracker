import logging
import os
import time
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import pandas as pd

GOOGLE_SHEET_CSV = "https://docs.google.com/spreadsheets/d/16PZrxpzsfBkF7hGN4OKDx6CRfIqySES4oLL9OoxOV8Q/export?format=csv"
COORD_FILE = "Stations_coord.xlsx"
PORT = int(os.environ.get("PORT", 10000))
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")

logging.basicConfig(level=logging.INFO)

telegram_app = ApplicationBuilder().token("7339977646:AAHez8tXVk7fOyve8qRYlHYX93Ud9eQNMhc").build()

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ –∂–µ–ª–µ–∑–Ω–æ–π –¥–æ—Ä–æ–≥–µ.\n\n–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: TCNU1234567), –ª–∏–±–æ —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª."
    )

# /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚ùì –ü–æ–º–æ—â—å:\n\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: TCNU1234567) –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª ‚Äî –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö."
    )

# /refresh (—Ñ–∏–∫—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞)
async def refresh(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ Google Sheets. –ù–∏—á–µ–≥–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
async def track(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message_text = update.message.text.strip().upper()
    container_list = message_text.split()

    try:
        df = pd.read_csv(GOOGLE_SHEET_CSV)
        df.columns = [str(col).strip().replace('\ufeff', '') for col in df.columns]
        df["–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏"] = pd.to_datetime(df["–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏"], errors='coerce')

        result_df = (
            df[df["–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä"].isin(container_list)]
            .sort_values("–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏", ascending=False)
            .drop_duplicates(subset=["–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä"])
        )

        if result_df.empty:
            await update.message.reply_text("‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ. –ü—Ä–æ–≤–µ—Ä—å –Ω–æ–º–µ—Ä–∞.")
            return

        grouped = result_df.groupby(["–°—Ç–∞–Ω—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "–°—Ç–∞–Ω—Ü–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è"])
        reply = "üì¶ –û—Ç—á—ë—Ç –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º:\n"

        for (start, end), group in grouped:
            reply += f"\nüöÜ *–ú–∞—Ä—à—Ä—É—Ç:* {start} ‚Üí {end}\n"
            for _, row in group.iterrows():
                station_name = str(row["–°—Ç–∞–Ω—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏—è"]).split("(")[0].strip().upper()
                reply += (
                    f"‚Äî `{row['–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä']}` | üìç {station_name} | ‚öôÔ∏è {row['–û–ø–µ—Ä–∞—Ü–∏—è']} | üìÖ {row['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏']}\n"
                )

        await update.message.reply_text(reply, parse_mode="Markdown")

    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ.")

telegram_app.add_handler(CommandHandler("start", start))
telegram_app.add_handler(CommandHandler("help", help_command))
telegram_app.add_handler(CommandHandler("refresh", refresh))
telegram_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, track))

if __name__ == '__main__':
    telegram_app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path="webhook",
        webhook_url=f"{WEBHOOK_URL}/webhook"
    )
    while True:
        time.sleep(10)
